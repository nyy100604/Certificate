
server {
    listen 80 default_server;
    client_max_body_size 20M;

    location / {
        # 将非 SSL 流量重定向到 HTTPS 端口
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 default_server ssl;
    client_max_body_size 20M;

    ssl_certificate     /etc/nginx/key/cacert.pem;
    ssl_certificate_key /etc/nginx/key/private.key;
    
    if ($http_x_forwarded_proto = "http") {
        return 301 https://$server_name$request_uri;
    }

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://server1:3001;
        proxy_redirect off;
    }
 
    location ~ ^/api/auth/(login|register){
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # 将请求代理到后端的地址，确保后端地址是正确的
        proxy_pass http://server1:3001;
    }

     location ~ ^/api/certification/(issuertocerti/\d+|registerCerti|uploadCerti|uploadPyCerti|findCerti|findCerti/prvacyBlockchain|findCerti/publicBlockchain|studentCerti|detail/\d+|issuertocerti/\d+|) {
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # 将请求代理到后端的地址，确保后端地址是正确的
        proxy_pass http://server1:3001;
    }
}

    



